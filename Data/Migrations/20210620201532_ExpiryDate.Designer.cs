// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210620201532_ExpiryDate")]
    partial class ExpiryDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Topicly")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Algorithm.UserReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Keyword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NegativeCount")
                        .HasColumnType("int");

                    b.Property<int>("PositiveCount")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reactions");
                });

            modelBuilder.Entity("Data.Models.Chats.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AnswererSeen")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("CreatorSeen")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset>("LastActivity")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("TopicAnswererId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TopicCreatorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicAnswererId");

                    b.HasIndex("TopicCreatorId");

                    b.HasIndex("TopicId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicCreatorId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicId = -1
                        },
                        new
                        {
                            Id = -2,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicCreatorId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicId = -2
                        },
                        new
                        {
                            Id = -3,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicCreatorId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicId = -3
                        },
                        new
                        {
                            Id = -4,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicCreatorId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicId = -4
                        },
                        new
                        {
                            Id = -5,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicCreatorId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicId = -5
                        },
                        new
                        {
                            Id = -6,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicCreatorId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicId = -6
                        },
                        new
                        {
                            Id = -7,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicCreatorId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicId = -7
                        },
                        new
                        {
                            Id = -8,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicCreatorId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicId = -8
                        },
                        new
                        {
                            Id = -9,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicCreatorId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicId = -9
                        },
                        new
                        {
                            Id = -10,
                            AnswererSeen = false,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatorSeen = false,
                            LastActivity = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            TopicAnswererId = "fab4fac1-c546-41de-aebc-a14da6895711",
                            TopicCreatorId = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            TopicId = -10
                        });
                });

            modelBuilder.Entity("Data.Models.Chats.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("DateOfSending")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = -11,
                            ChatId = -1,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -12,
                            ChatId = -1,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -13,
                            ChatId = -1,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -14,
                            ChatId = -1,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -15,
                            ChatId = -1,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -16,
                            ChatId = -1,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -17,
                            ChatId = -1,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -18,
                            ChatId = -1,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -19,
                            ChatId = -1,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -20,
                            ChatId = -1,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -21,
                            ChatId = -2,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -22,
                            ChatId = -2,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -23,
                            ChatId = -2,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -24,
                            ChatId = -2,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -25,
                            ChatId = -2,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -26,
                            ChatId = -2,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -27,
                            ChatId = -2,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -28,
                            ChatId = -2,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -29,
                            ChatId = -2,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -30,
                            ChatId = -2,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -31,
                            ChatId = -3,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -32,
                            ChatId = -3,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -33,
                            ChatId = -3,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -34,
                            ChatId = -3,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -35,
                            ChatId = -3,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -36,
                            ChatId = -3,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -37,
                            ChatId = -3,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -38,
                            ChatId = -3,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -39,
                            ChatId = -3,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -40,
                            ChatId = -3,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -41,
                            ChatId = -4,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -42,
                            ChatId = -4,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -43,
                            ChatId = -4,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -44,
                            ChatId = -4,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -45,
                            ChatId = -4,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -46,
                            ChatId = -4,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -47,
                            ChatId = -4,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -48,
                            ChatId = -4,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -49,
                            ChatId = -4,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -50,
                            ChatId = -4,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -51,
                            ChatId = -5,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -52,
                            ChatId = -5,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -53,
                            ChatId = -5,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -54,
                            ChatId = -5,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -55,
                            ChatId = -5,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -56,
                            ChatId = -5,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -57,
                            ChatId = -5,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -58,
                            ChatId = -5,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -59,
                            ChatId = -5,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -60,
                            ChatId = -5,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -61,
                            ChatId = -6,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -62,
                            ChatId = -6,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -63,
                            ChatId = -6,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -64,
                            ChatId = -6,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -65,
                            ChatId = -6,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -66,
                            ChatId = -6,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -67,
                            ChatId = -6,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -68,
                            ChatId = -6,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -69,
                            ChatId = -6,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -70,
                            ChatId = -6,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -71,
                            ChatId = -7,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -72,
                            ChatId = -7,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -73,
                            ChatId = -7,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -74,
                            ChatId = -7,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -75,
                            ChatId = -7,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -76,
                            ChatId = -7,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -77,
                            ChatId = -7,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -78,
                            ChatId = -7,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -79,
                            ChatId = -7,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -80,
                            ChatId = -7,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -81,
                            ChatId = -8,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -82,
                            ChatId = -8,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -83,
                            ChatId = -8,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -84,
                            ChatId = -8,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -85,
                            ChatId = -8,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -86,
                            ChatId = -8,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -87,
                            ChatId = -8,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -88,
                            ChatId = -8,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -89,
                            ChatId = -8,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -90,
                            ChatId = -8,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -91,
                            ChatId = -9,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -92,
                            ChatId = -9,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -93,
                            ChatId = -9,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -94,
                            ChatId = -9,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -95,
                            ChatId = -9,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -96,
                            ChatId = -9,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -97,
                            ChatId = -9,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -98,
                            ChatId = -9,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -99,
                            ChatId = -9,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -100,
                            ChatId = -9,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -101,
                            ChatId = -10,
                            Content = "this is test message #-1",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -102,
                            ChatId = -10,
                            Content = "this is test message #-2",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -103,
                            ChatId = -10,
                            Content = "this is test message #-3",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -104,
                            ChatId = -10,
                            Content = "this is test message #-4",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -105,
                            ChatId = -10,
                            Content = "this is test message #-5",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -106,
                            ChatId = -10,
                            Content = "this is test message #-6",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -107,
                            ChatId = -10,
                            Content = "this is test message #-7",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -108,
                            ChatId = -10,
                            Content = "this is test message #-8",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        },
                        new
                        {
                            Id = -109,
                            ChatId = -10,
                            Content = "this is test message #-9",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "c7b013f0-5201-4317-abd8-c211f91b7330"
                        },
                        new
                        {
                            Id = -110,
                            ChatId = -10,
                            Content = "this is test message #-10",
                            DateOfSending = new DateTimeOffset(new DateTime(2021, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SenderId = "fab4fac1-c546-41de-aebc-a14da6895711"
                        });
                });

            modelBuilder.Entity("Data.Models.Topics.SeenByUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("SeenByUser");
                });

            modelBuilder.Entity("Data.Models.Topics.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "tag-1"
                        },
                        new
                        {
                            Id = -2,
                            Name = "tag-2"
                        },
                        new
                        {
                            Id = -3,
                            Name = "tag-3"
                        },
                        new
                        {
                            Id = -4,
                            Name = "tag-4"
                        });
                });

            modelBuilder.Entity("Data.Models.Topics.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("ExpiryDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #0"
                        },
                        new
                        {
                            Id = -2,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-1"
                        },
                        new
                        {
                            Id = -3,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-2"
                        },
                        new
                        {
                            Id = -4,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-3"
                        },
                        new
                        {
                            Id = -5,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-4"
                        },
                        new
                        {
                            Id = -6,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-5"
                        },
                        new
                        {
                            Id = -7,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-6"
                        },
                        new
                        {
                            Id = -8,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-7"
                        },
                        new
                        {
                            Id = -9,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-8"
                        },
                        new
                        {
                            Id = -10,
                            CreatedAt = new DateTimeOffset(new DateTime(2021, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CreatedById = "fab4fac1-c546-41de-aebc-a14da6895711",
                            ExpiryDate = new DateTimeOffset(new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "TEMAT #-9"
                        });
                });

            modelBuilder.Entity("Data.Models.Topics.TopicTag", b =>
                {
                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("TopicId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("TopicTag");

                    b.HasData(
                        new
                        {
                            TopicId = -1,
                            TagId = -4
                        },
                        new
                        {
                            TopicId = -2,
                            TagId = -3
                        },
                        new
                        {
                            TopicId = -3,
                            TagId = -2
                        },
                        new
                        {
                            TopicId = -4,
                            TagId = -1
                        },
                        new
                        {
                            TopicId = -5,
                            TagId = -4
                        },
                        new
                        {
                            TopicId = -6,
                            TagId = -3
                        },
                        new
                        {
                            TopicId = -7,
                            TagId = -2
                        },
                        new
                        {
                            TopicId = -8,
                            TagId = -1
                        },
                        new
                        {
                            TopicId = -9,
                            TagId = -4
                        },
                        new
                        {
                            TopicId = -10,
                            TagId = -3
                        });
                });

            modelBuilder.Entity("Data.Models.Users.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", "Identity");

                    b.HasData(
                        new
                        {
                            Id = "fab4fac1-c546-41de-aebc-a14da6895711",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b39e64d-1f37-4273-a14b-cf96c621f2be",
                            Email = "bob@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BOB@MAIL.COM",
                            NormalizedUserName = "BOB",
                            PasswordHash = "AQAAAAEAACcQAAAAEC9DL7FDwapRt+dT3rP9ABeXLOFipwhUv5WPGKJYnTdoFduEHsy7I2ajVH2ynTOHuA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e7c8add-25c2-4666-8c20-88f02ff06fb6",
                            TwoFactorEnabled = false,
                            UserName = "bob"
                        },
                        new
                        {
                            Id = "c7b013f0-5201-4317-abd8-c211f91b7330",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d4d777c-833a-4882-8cc2-998741d682fb",
                            Email = "alice@mail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ALICE@MAIL.COM",
                            NormalizedUserName = "ALICE",
                            PasswordHash = "AQAAAAEAACcQAAAAEJeED9Tjrh1HWd495eES4NMzrLOZNG3whkLCv1YrYwCYXTJRaXOCUq7xEcxKW2AE+A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c8055658-8a3e-4321-9cf7-6b2e7d52de74",
                            TwoFactorEnabled = false,
                            UserName = "alice"
                        });
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", "Identity");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "Identity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "Identity");
                });

            modelBuilder.Entity("Data.Models.Chats.Chat", b =>
                {
                    b.HasOne("Data.Models.Users.ApplicationUser", "TopicAnswerer")
                        .WithMany()
                        .HasForeignKey("TopicAnswererId");

                    b.HasOne("Data.Models.Users.ApplicationUser", "TopicCreator")
                        .WithMany()
                        .HasForeignKey("TopicCreatorId");

                    b.HasOne("Data.Models.Topics.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("TopicAnswerer");

                    b.Navigation("TopicCreator");
                });

            modelBuilder.Entity("Data.Models.Chats.Message", b =>
                {
                    b.HasOne("Data.Models.Chats.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Users.ApplicationUser", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Data.Models.Topics.SeenByUser", b =>
                {
                    b.HasOne("Data.Models.Topics.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Data.Models.Topics.Topic", b =>
                {
                    b.HasOne("Data.Models.Users.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Data.Models.Topics.TopicTag", b =>
                {
                    b.HasOne("Data.Models.Topics.Tag", "Tag")
                        .WithMany("TopicTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Topics.Topic", "Topic")
                        .WithMany("TopicTags")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Models.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Models.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Models.Users.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.Topics.Tag", b =>
                {
                    b.Navigation("TopicTags");
                });

            modelBuilder.Entity("Data.Models.Topics.Topic", b =>
                {
                    b.Navigation("TopicTags");
                });
#pragma warning restore 612, 618
        }
    }
}
